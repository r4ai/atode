/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as appSettingsIndexRouteImport } from './routes/(app)/settings/index'
import { Route as appHomeIndexRouteImport } from './routes/(app)/home/index'
import { Route as appFavoritesIndexRouteImport } from './routes/(app)/favorites/index'

const appRouteRoute = appRouteRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const appSettingsIndexRoute = appSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => appRouteRoute,
} as any)
const appHomeIndexRoute = appHomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => appRouteRoute,
} as any)
const appFavoritesIndexRoute = appFavoritesIndexRouteImport.update({
  id: '/favorites/',
  path: '/favorites/',
  getParentRoute: () => appRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appRouteRouteWithChildren
  '/login': typeof LoginIndexRoute
  '/favorites': typeof appFavoritesIndexRoute
  '/home': typeof appHomeIndexRoute
  '/settings': typeof appSettingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof appRouteRouteWithChildren
  '/login': typeof LoginIndexRoute
  '/favorites': typeof appFavoritesIndexRoute
  '/home': typeof appHomeIndexRoute
  '/settings': typeof appSettingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/(app)/favorites/': typeof appFavoritesIndexRoute
  '/(app)/home/': typeof appHomeIndexRoute
  '/(app)/settings/': typeof appSettingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/favorites' | '/home' | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/favorites' | '/home' | '/settings'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/login/'
    | '/(app)/favorites/'
    | '/(app)/home/'
    | '/(app)/settings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/settings/': {
      id: '/(app)/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/home/': {
      id: '/(app)/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof appHomeIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/favorites/': {
      id: '/(app)/favorites/'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof appFavoritesIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
  }
}

interface appRouteRouteChildren {
  appFavoritesIndexRoute: typeof appFavoritesIndexRoute
  appHomeIndexRoute: typeof appHomeIndexRoute
  appSettingsIndexRoute: typeof appSettingsIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appFavoritesIndexRoute: appFavoritesIndexRoute,
  appHomeIndexRoute: appHomeIndexRoute,
  appSettingsIndexRoute: appSettingsIndexRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
