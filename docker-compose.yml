version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: todo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: todoapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/drizzle/extensions.sql:/docker-entrypoint-initdb.d/01-extensions.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todoapp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  # Backend API Server
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: todo-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:password@postgres:5432/todoapp
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    networks:
      - todo-network
    command: bun run dev

  # Frontend Development Server
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.dev
    container_name: todo-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
    networks:
      - todo-network
    command: bun run dev

  # Redis for caching (optional, for Phase 4)
  redis:
    image: redis:7-alpine
    container_name: todo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - todo-network
    command: redis-server --save 20 1 --loglevel warning

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  todo-network:
    driver: bridge